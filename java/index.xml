<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javas on Your title</title>
    <link>https://qmr0925.github.io/java/</link>
    <description>Recent content in Javas on Your title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Dec 2020 10:24:53 +0800</lastBuildDate>
    
	<atom:link href="https://qmr0925.github.io/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Refection</title>
      <link>https://qmr0925.github.io/java/refection/</link>
      <pubDate>Tue, 01 Dec 2020 10:24:53 +0800</pubDate>
      
      <guid>https://qmr0925.github.io/java/refection/</guid>
      <description>一、TiDB主要特性  TiDB是一个开源分布式关系型数据库，它主要用来应用在全部的OLTP的场景和大部
 分的OLAP场景。TiDB作为一个开源的分布式数据库主要有以下特点：
1、高度兼容MySQL  MySQL迁移到TiDB是非常容易的，无论是单机迁移还是集群的迁移
 2、支持无限的水平弹性扩展  新增节点实现TiDB的水平扩展，轻松地应对高并发、海量数据的场景
 3、强一致性和高可用  基于Raft的多数派选举协议可以提供100%的数据强一致性，可以实现故障的自动恢复
 4、分布式事务  支持ACID事务
  TiDB这些特性使它成为业界认可的优秀数据库产品，但是我们要想深入理解这些特性，
 还要从架构原理的角度学习
二、TiDB的架构原理简介  TiDB集群主要包括三个核心组件：TiDB Server,PD Server,TiKV Server
  具体的架构原理图如下所示：
 1、TiDB Server  TiDB Server 负责接收SQL请求，处理SQL相关的逻辑，并通过PD找到存储计算所需
 数据的TiKV地址，与TiKV交互数据，最终返回结果。
 TiDB Server 是无状态的，其本身并不存储数据，只负责计算，可以无限水平扩展，
 可通过负载均衡的组件(LVS、HAProxy或者F5)对外提供统一的接入地址
2、PD Server(Placement Driver)  PD是整个集群的管理模块，具体的工作职能是：
   存储这个集群的原信息(某个Key具体存储在哪个TiKV的节点)
  对TiKV集群进行调度和负载均衡(数据迁移、Raft Group leader)
  分配全局唯一且递增的事物ID
   PD通过Raft协议保证数据的安全性,Raft的leader Server负责处理所有操作，其余的PD</description>
    </item>
    
  </channel>
</rss>